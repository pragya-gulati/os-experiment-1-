import java.util.*;

public class OptimalPageReplacement {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter the number of pages: ");
        int n = scanner.nextInt();
        int[] pages = new int[n];

        System.out.println("Enter the page references:");
        for (int i = 0; i < n; i++) {
            pages[i] = scanner.nextInt();
        }

        System.out.print("Enter the capacity of frames: ");
        int capacity = scanner.nextInt();

        Set<Integer> cache = new HashSet<>();
        int pageFaults = 0;

        for (int i = 0; i < pages.length; i++) {
            if (!cache.contains(pages[i])) {
                pageFaults++;
                if (cache.size() == capacity) {
                    int farthest = -1, pageToRemove = -1;
                    for (int page : cache) {
                        int nextUse = Integer.MAX_VALUE;
                        for (int j = i + 1; j < pages.length; j++) {
                            if (pages[j] == page) {
                                nextUse = j;
                                break;
                            }
                        }
                        if (nextUse > farthest) {
                            farthest = nextUse;
                            pageToRemove = page;
                        }
                    }
                    cache.remove(pageToRemove);
                }
                cache.add(pages[i]);
            }
        }

        System.out.println("Optimal - Page Faults: " + pageFaults);
        scanner.close();
    }
}
