import java.util.*;

public class LRUPageReplacement {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter the number of pages: ");
        int n = scanner.nextInt();
        int[] pages = new int[n];

        System.out.println("Enter the page references:");
        for (int i = 0; i < n; i++) {
            pages[i] = scanner.nextInt();
        }

        System.out.print("Enter the capacity of frames: ");
        int capacity = scanner.nextInt();

        LinkedHashSet<Integer> cache = new LinkedHashSet<>(capacity);
        int pageFaults = 0;

        for (int page : pages) {
            if (!cache.contains(page)) {
                pageFaults++;
                if (cache.size() == capacity) {
                    Iterator<Integer> it = cache.iterator();
                    it.next(); // Remove the least recently used page
                    it.remove();
                }
            } else {
                // Remove and re-insert to mark as recently used
                cache.remove(page);
            }
            cache.add(page);
        }

        System.out.println("LRU - Page Faults: " + pageFaults);
        scanner.close();
    }
}
